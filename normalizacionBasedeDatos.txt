Consultas sobre una tabla


Devuelve un listado con el nombre de los todos los clientes españoles.

	select c.nombre from cliente c 
	join ciudad cd on cd.id = c.id_ciudad
	join region r on r.id = cd.id_region
	join pais p on p.id = r.id_pais
	where p.nombre like "espana"

+------------------+
| nombre           |
+------------------+
| John Doe         |
| Emily Davis      |
| David Wilson     |
| James Wilson     |
| Jane Smith       |
| William Martinez |
| Olivia Taylor    |
+------------------+

Devuelve un listado con los distintos estados por los que puede pasar un pedido.

select descripcion
from estado_pedido

+-------------+
| descripcion |
+-------------+
| En Proceso  |
| En Ruta     |
| Entregado   |
| Cancelado   |
+-------------+


Devuelve un listado con el código de cliente de aquellos clientes que realizaron algún pago en 2008. Tenga en cuenta que deberá eliminar aquellos códigos de cliente que aparezcan repetidos. Resuelva la consulta: • Utilizando la función YEAR de MySQL. • Utilizando la función DATE_FORMAT de MySQL. • Sin utilizar ninguna de las funciones anteriores.

alterando unos pedidos para acomodarlos a la consulta 
update pedido set fecha_pedido = date("2008-04-07") where id = 7 or id = 10;

YEAR
	select distinct c.nombre 
	from cliente c
	join pedido p on p.cedula_cliente = c.cedula
	where year(p.fecha_pedido) = 2008
	

	
	+--------------+
	| nombre       |
	+--------------+
	| David Wilson |
	| James Wilson |
	+--------------+

DATE_FORMAT

	select distinct c.nombre
	from cliente c
	join pedido p on p.cedula_cliente = c.cedula
	where date_format(p.fecha_pedido,"%Y") = 2008

	+--------------+
	| nombre       |
	+--------------+
	| David Wilson |
	| James Wilson |
	+--------------+

SIN FUNCIONES ANTERIORES

	select distinct c.nombre
	from cliente c
	join pedido p on p.cedula_cliente = c.cedula
	where p.fecha_pedido like "%2008%"; 

	+--------------+
	| nombre       |
	+--------------+
	| David Wilson |
	| James Wilson |
	+--------------+

Devuelve un listado con el código de pedido, código de cliente, fecha esperada y fecha de entrega de los pedidos que no han sido entregados a tiempo.

	
	select p.id as "Codigo Pedido",
	 p.cedula_cliente as "Cedula Cliente",
	 p.fecha_esperada as "Fecha esperada",
	 p.fecha_entrega as "Fecha de Entrega"
	 from pedido p
	 where p.fecha_entrega > p.fecha_esperada;

	+---------------+----------------+----------------+------------------+
	| Codigo Pedido | Cedula Cliente | Fecha esperada | Fecha de Entrega |
	+---------------+----------------+----------------+------------------+
	|             1 |     1122334455 | 2024-04-08     | 2024-04-09       |
	|             3 |     1122334457 | 2024-04-10     | 2024-04-11       |
	|             5 |     1122334459 | 2024-04-12     | 2024-04-14       |
	|             7 |     1122334461 | 2024-04-14     | 2024-04-15       |
	|             8 |     1122334462 | 2024-04-15     | 2024-04-16       |
	|            10 |     1122334464 | 2024-04-17     | 2024-04-18       |
	+---------------+----------------+----------------+------------------+

Devuelve un listado con el código de pedido, código de cliente, fecha esperada y fecha de entrega de los pedidos cuya fecha de entrega ha sido al menos dos días antes de la fecha esperada. • Utilizando la función ADDDATE de MySQL. • Utilizando la función DATEDIFF de MySQL. • ¿Sería posible resolver esta consulta utilizando el operador de suma + o resta -?

modificaremos los registros de la tabla para que la consulta nos de resultados.

update pedido
set fecha_entrega = fecha_entrega - 3
where id in (1,3); 

DATE_ADD

	select p.id as "Codigo Pedido",
	p.cedula_cliente as "Cedula Cliente",
	p.fecha_esperada as "Fecha esperada",
	p.fecha_entrega as "Fecha de Entrega"
	from pedido p
	where date_add(p.fecha_entrega, interval 2 day) = p.fecha_esperada;
	
	+---------------+----------------+----------------+------------------+
	| Codigo Pedido | Cedula Cliente | Fecha esperada | Fecha de Entrega |
	+---------------+----------------+----------------+------------------+
	|             1 |     1122334455 | 2024-04-08     | 2024-04-06       |
	|             3 |     1122334457 | 2024-04-10     | 2024-04-08       |
	+---------------+----------------+----------------+------------------+

DATEDIFF


	select p.id as "Codigo Pedido",
	p.cedula_cliente as "Cedula Cliente",
	p.fecha_esperada as "Fecha esperada",
	p.fecha_entrega as "Fecha de Entrega"
	from pedido p
	where datediff(p.fecha_esperada, p.fecha_entrega) = 2;
	
	+---------------+----------------+----------------+------------------+
	| Codigo Pedido | Cedula Cliente | Fecha esperada | Fecha de Entrega |
	+---------------+----------------+----------------+------------------+
	|             1 |     1122334455 | 2024-04-08     | 2024-04-06       |
	|             3 |     1122334457 | 2024-04-10     | 2024-04-08       |
	+---------------+----------------+----------------+------------------+

CON + O -


	select p.id as "Codigo Pedido",
	p.cedula_cliente as "Cedula Cliente",
	p.fecha_esperada as "Fecha esperada",
	p.fecha_entrega as "Fecha de Entrega"
	from pedido p
	where (p.fecha_esperada - p.fecha_entrega) = 2;
	
	+---------------+----------------+----------------+------------------+
	| Codigo Pedido | Cedula Cliente | Fecha esperada | Fecha de Entrega |
	+---------------+----------------+----------------+------------------+
	|             1 |     1122334455 | 2024-04-08     | 2024-04-06       |
	|             3 |     1122334457 | 2024-04-10     | 2024-04-08       |
	+---------------+----------------+----------------+------------------+
	

	select p.id as "Codigo Pedido",
	p.cedula_cliente as "Cedula Cliente",
	p.fecha_esperada as "Fecha esperada",
	p.fecha_entrega as "Fecha de Entrega"
	from pedido p
	where (p.fecha_entrega + 2) = p.fecha_esperada;
	
	+---------------+----------------+----------------+------------------+
	| Codigo Pedido | Cedula Cliente | Fecha esperada | Fecha de Entrega |
	+---------------+----------------+----------------+------------------+
	|             1 |     1122334455 | 2024-04-08     | 2024-04-06       |
	|             3 |     1122334457 | 2024-04-10     | 2024-04-08       |
	+---------------+----------------+----------------+------------------+

Devuelve un listado de todos los pedidos que fueron rechazados en 2009.

	alteraremos los registros para que la consulta nos de resultados
	update pedidos	

	insert into estado_pedido(descripcion) values ("Rechazado");

	update pedido
	set id_estado_pedido = 5
	where id in (10,9);
	
	select p.id as "Codigo Pedido",
	p.fecha_pedido as "Fecha de Pedido",
	p.fecha_entrega as "Fecha de Entrega",
	p.fecha_esperada as "Fecha Esperada",
	p.comentarios as "Comentarios",
	ep.descripcion as "Estado del Pedido",
	p.cedula_cliente as "Cedula Cliente"
	from pedido p
	join estado_pedido ep on ep.id = p.id_estado_pedido
	where ep.descripcion = "Rechazado"
	

Devuelve un listado de todos los pedidos que han sido entregados en el mes de enero de cualquier año.

se modifican los registros.
	
	update pedido
	set fecha_pedido = date_sub(fecha_pedido,interval 3 month)
	where id in (9,10);

	select p.id as "Codigo Pedido",
	p.fecha_pedido as "Fecha de Pedido",
	p.fecha_entrega as "Fecha de Entrega",
	p.fecha_esperada as "Fecha Esperada",
	p.comentarios as "Comentarios",
	ep.descripcion as "Estado del Pedido",
	p.cedula_cliente as "Cedula Cliente",
	date_format(p.fecha_pedido, "%M") as mes
	from pedido p 
	join estado_pedido ep on ep.id = p.id_estado_pedido
	where date_format(p.fecha_pedido, "%m") = 1
	
+---------------+-----------------+------------------+----------------+--------------------------------------------------------+-------------------+----------------+---------+
| Codigo Pedido | Fecha de Pedido | Fecha de Entrega | Fecha Esperada | Comentarios                                            | Estado del Pedido | Cedula Cliente | mes     |
+---------------+-----------------+------------------+----------------+--------------------------------------------------------+-------------------+----------------+---------+
|            10 | 2008-01-10      | 2024-04-18       | 2024-04-17     | Pedido estándar                                        | En Proceso        |     1122334464 | January |
|             9 | 2024-01-09      | NULL             | 2024-04-16     | Productos dañados en tránsito, se solicita reemplazo   | Entregado         |     1122334463 | January |
+---------------+-----------------+------------------+----------------+--------------------------------------------------------+-------------------+----------------+---------+


Devuelve un listado con todos los pagos que se realizaron en el año 2008 mediante Paypal. Ordene el resultado de mayor a menor.

	update pago
	set id_tipo_pago = 4, fecha = date_sub(fecha, interval 16 year)
	where cedula_cliente in (1122334464, 1122334460);

	select p.id as "Codigo Pago",
	p.fecha as "Fecha Pago",
	p.total as "Total del Pago",
	p.cedula_cliente as "Cedula del Cliente",
	tp.descripcion as "Tipo pago"
	from pago p
	join tipo_pago tp on tp.id = p.id_tipo_pago
	where tp.descripcion like ("paypal") and date_format(p.fecha,"%Y") = 2008

Devuelve un listado con todas las formas de pago que aparecen en la tabla pago. Tenga en cuenta que no deben aparecer formas de pago repetidas.

	select tp.id as "Codigo Forma de Pago", 
	tp.descripcion as "Tipo de pago"
	from tipo_pago tp;

Devuelve un listado con todos los productos que pertenecen a la gama Ornamentales y que tienen más de 100 unidades en stock. El listado deberá estar ordenado por su precio de venta, mostrando en primer lugar los de mayor precio.

	Voy a cambiar la gamma de ornamentales por electronica
	
	select p.nombre as "Nombre Producto",
	(ifnull(p.descripcion,"Sin desc")) as "Descripcion Producto",
	p.precio_venta as "Precio de venta",
	p.precio_proveedor as "Precio de Compra",
	g.descripcion_txt as "Gamma Producto",
	(concat(d.largo," x ",d.ancho, ifnull(concat(" x ",d.alto),""))) as "Dimensiones",
	i.stock_actual as "Disponibles"
	from producto p
	join gamma_producto g on g.id = p.id_gamma_producto
	join dimensiones d on d.id = p.id_dimensiones
	join inventario i on i.id_producto = p.id
	where g.descripcion_txt like ("electronica")
	and i.stock_actual > 100
	order by p.precio_venta desc;

+-----------------+---------------------------------------+-----------------+------------------+----------------+-------------+-------------+
| Nombre Producto | Descripcion Producto                  | Precio de venta | Precio de Compra | Gamma Producto | Dimensiones | Disponibles |
+-----------------+---------------------------------------+-----------------+------------------+----------------+-------------+-------------+
| Impresora HP    | Impresora multifuncional inalámbrica  |             300 |              200 | Electrónica    | 10 x 20 x 5 |         150 |
| Teclado Razer   | Teclado mecánico para gaming          |             120 |               90 | Electrónica    | 10 x 20 x 5 |         250 |
+-----------------+---------------------------------------+-----------------+------------------+----------------+-------------+-------------+
	
Devuelve un listado con todos los clientes que sean de la ciudad de Madrid y cuyo representante de ventas tenga el código de empleado 11 o 30.

	reemplazare el cod del empleado con su cedular (1234567893 o 1234567898)

	

Consultas multitabla (Composición interna) Resuelva todas las consultas utilizando la sintaxis de SQL1 y SQL2. Las consultas con sintaxis de SQL2 se deben resolver con INNER JOIN y NATURAL JOIN.

    Obtén un listado con el nombre de cada cliente y el nombre y apellido de su representante de ventas.

Muestra el nombre de los clientes que hayan realizado pagos junto con el nombre de sus representantes de ventas.

Muestra el nombre de los clientes que no hayan realizado pagos junto con el nombre de sus representantes de ventas.

Devuelve el nombre de los clientes que han hecho pagos y el nombre de sus representantes junto con la ciudad de la oficina a la que pertenece el representante.

Devuelve el nombre de los clientes que no hayan hecho pagos y el nombre de sus representantes junto con la ciudad de la oficina a la que pertenece el representante.

Lista la dirección de las oficinas que tengan clientes en Fuenlabrada.

Devuelve el nombre de los clientes y el nombre de sus representantes junto con la ciudad de la oficina a la que pertenece el representante.

Devuelve un listado con el nombre de los empleados junto con el nombre de sus jefes.

Devuelve un listado que muestre el nombre de cada empleados, el nombre de su jefe y el nombre del jefe de sus jefe.

Devuelve el nombre de los clientes a los que no se les ha entregado a tiempo un pedido.

Devuelve un listado de las diferentes gamas de producto que ha comprado cada cliente. Consultas multitabla (Composición externa) Resuelva todas las consultas utilizando las cláusulas LEFT JOIN, RIGHT JOIN, NATURAL LEFT JOIN y NATURAL RIGHT JOIN.

Devuelve un listado que muestre solamente los clientes que no han realizado ningún pago.

Devuelve un listado que muestre solamente los clientes que no han realizado ningún pedido.

Devuelve un listado que muestre los clientes que no han realizado ningún pago y los que no han realizado ningún pedido.

Devuelve un listado que muestre solamente los empleados que no tienen una oficina asociada.

Devuelve un listado que muestre solamente los empleados que no tienen un cliente asociado.

Devuelve un listado que muestre solamente los empleados que no tienen un cliente asociado junto con los datos de la oficina donde trabajan.

Devuelve un listado que muestre los empleados que no tienen una oficina asociada y los que no tienen un cliente asociado.

Devuelve un listado de los productos que nunca han aparecido en un pedido.

Devuelve un listado de los productos que nunca han aparecido en un pedido. El resultado debe mostrar el nombre, la descripción y la imagen del producto.

Devuelve las oficinas donde no trabajan ninguno de los empleados que hayan sido los representantes de ventas de algún cliente que haya realizado la compra de algún producto de la gama Frutales.

Devuelve un listado con los clientes que han realizado algún pedido pero no han realizado ningún pago.

Devuelve un listado con los datos de los empleados que no tienen clientes asociados y el nombre de su jefe asociado. Consultas resumen

¿Cuántos empleados hay en la compañía?

¿Cuántos clientes tiene cada país?

¿Cuál fue el pago medio en 2009?

¿Cuántos pedidos hay en cada estado? Ordena el resultado de forma descendente por el número de pedidos.

Calcula el precio de venta del producto más caro y más barato en una misma consulta.

Calcula el número de clientes que tiene la empresa.

¿Cuántos clientes existen con domicilio en la ciudad de Madrid?

¿Calcula cuántos clientes tiene cada una de las ciudades que empiezan por M?

Devuelve el nombre de los representantes de ventas y el número de clientes al que atiende cada uno.

Calcula el número de clientes que no tiene asignado representante de ventas.

Calcula la fecha del primer y último pago realizado por cada uno de los clientes. El listado deberá mostrar el nombre y los apellidos de cada cliente.

Calcula el número de productos diferentes que hay en cada uno de los pedidos.

Calcula la suma de la cantidad total de todos los productos que aparecen en cada uno de los pedidos.

Devuelve un listado de los 20 productos más vendidos y el número total de unidades que se han vendido de cada uno. El listado deberá estar ordenado por el número total de unidades vendidas.

La facturación que ha tenido la empresa en toda la historia, indicando la base imponible, el IVA y el total facturado. La base imponible se calcula sumando el coste del producto por el número de unidades vendidas de la tabla detalle_pedido. El IVA es el 21 % de la base imponible, y el total la suma de los dos campos anteriores.

La misma información que en la pregunta anterior, pero agrupada por código de producto.

La misma información que en la pregunta anterior, pero agrupada por código de producto filtrada por los códigos que empiecen por OR.

Lista las ventas totales de los productos que hayan facturado más de 3000 euros. Se mostrará el nombre, unidades vendidas, total facturado y total facturado con impuestos (21% IVA).

Muestre la suma total de todos los pagos que se realizaron para cada uno de los años que aparecen en la tabla pagos.

Consultas variadas

Devuelve el listado de clientes indicando el nombre del cliente y cuántos pedidos ha realizado. Tenga en cuenta que pueden existir clientes que no han realizado ningún pedido.

Devuelve un listado con los nombres de los clientes y el total pagado por cada uno de ellos. Tenga en cuenta que pueden existir clientes que no han realizado ningún pago.

Devuelve el nombre de los clientes que hayan hecho pedidos en 2008 ordenados alfabéticamente de menor a mayor.

Devuelve el nombre del cliente, el nombre y primer apellido de su representante de ventas y el número de teléfono de la oficina del representante de ventas, de aquellos clientes que no hayan realizado ningún pago.

Devuelve el listado de clientes donde aparezca el nombre del cliente, el nombre y primer apellido de su representante de ventas y la ciudad donde está su oficina.

Devuelve el nombre, apellidos, puesto y teléfono de la oficina de aquellos empleados que no sean representante de ventas de ningún cliente.

Devuelve un listado indicando todas las ciudades donde hay oficinas y el número de empleados que tiene.

